{"version":3,"sources":["guides/guides.js","App.js","serviceWorker.js","index.js"],"names":["guides","creator","App","useState","fontsize","setfontsize","fontstyle","setfontstyle","md","Remarkable","html","typographer","use","linkify","sizeChange","e","target","value","document","getElementById","style","fontSize","fontChange","fontFamily","className","id","class","onClick","textAlign","onChange","innerHTML","render","type","Boolean","window","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mRAAWA,EAAM,0oIAuONC,EAAO,+mECrIHC,MA5Ff,WAAgB,IAAD,EACkBC,mBAAS,QAD3B,mBACNC,EADM,KACGC,EADH,OAEqBF,mBAAS,SAF9B,mBAENG,EAFM,KAEKC,EAFL,KAITC,EAAK,IAAIC,IAAW,OAAQ,CAC9BC,MAAM,EACNC,aAAa,IACZC,IAAIC,KAMP,SAASC,EAAWC,GAClBV,EAAYU,EAAEC,OAAOC,OACrBC,SAASC,eAAe,WAAWC,MAAMC,SAAWN,EAAEC,OAAOC,MAG/D,SAASK,EAAWP,GAClBR,EAAaQ,EAAEC,OAAOC,OACtBC,SAASC,eAAe,WAAWC,MAAMG,WAAaR,EAAEC,OAAOC,MAkBjE,OACE,6BACA,yBAAKO,UAAU,YAEf,yBAAKC,GAAG,WAAWC,MAAM,YACzB,4BAAQA,MAAM,WAAd,cAAoCtB,GACpC,yBAAKqB,GAAG,mBAAmBC,MAAM,oBACjC,4BAAQC,QAASb,EAAYG,MAAM,QAAnC,QACA,4BAAQU,QAASb,EAAYG,MAAM,QAAnC,QACA,4BAAQU,QAASb,EAAYG,MAAM,QAAnC,QACA,4BAAQU,QAASb,EAAYG,MAAM,QAAnC,QACA,4BAAQU,QAASb,EAAYG,MAAM,QAAnC,QACA,4BAAQU,QAASb,EAAYG,MAAM,QAAnC,QACA,4BAAQU,QAASb,EAAYG,MAAM,QAAnC,QACA,4BAAQU,QAASb,EAAYG,MAAM,QAAnC,QACA,4BAAQU,QAASb,EAAYG,MAAM,QAAnC,QACA,4BAAQU,QAASb,EAAYG,MAAM,QAAnC,UAIA,yBAAKQ,GAAG,WAAWC,MAAM,aACzB,4BAAQA,MAAM,YAAd,eAAsCpB,GACtC,yBAAKmB,GAAG,mBAAmBC,MAAM,qBACjC,4BAAQC,QAASL,EAAYL,MAAM,gCAAnC,SACA,4BAAQU,QAASL,EAAYL,MAAM,kCAAnC,WACA,4BAAQU,QAASL,EAAYL,MAAM,kCAAnC,WACA,4BAAQU,QAASL,EAAYL,MAAM,mCAAnC,mBACA,4BAAQU,QAASL,EAAYL,MAAM,qCAAnC,eACA,4BAAQU,QAASL,EAAYL,MAAM,wCAAnC,oBAIE,yBAAKQ,GAAG,UACR,wBAAIL,MAAO,CAACQ,UAAW,WAAvB,mBACA,8BACA,8BAAUH,GAAG,OAAOI,SAhExB,SAAcd,GACZG,SAASC,eAAe,WAAWW,UAAYtB,EAAGuB,OAAOhB,EAAEC,OAAOC,UAgEhE,4BAAQe,KAAK,SAASL,QAnD1B,WACET,SAASC,eAAe,QAAQF,MAAQjB,EACxCkB,SAASC,eAAe,WAAWW,UAAYtB,EAAGuB,OAAO/B,KAiDvD,kBACA,4BAAQgC,KAAK,SAASL,QA/C1B,WACET,SAASC,eAAe,QAAQF,MAAQhB,EACxCiB,SAASC,eAAe,WAAWW,UAAYtB,EAAGuB,OAAO9B,KA6CvD,qBACA,4BAAQ+B,KAAK,SAASL,QA3C1B,WACET,SAASC,eAAe,QAAQF,MAAQ,GACxCC,SAASC,eAAe,WAAWW,UAAY,KAyC7C,WAKA,yBAAKL,GAAG,WACR,wBAAIL,MAAO,CAACQ,UAAW,WAAvB,oBACA,yBAAKH,GAAG,gBC7EMQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASP,OACP,kBAAC,IAAMQ,WAAP,KACE,kBAAC,EAAD,OAEFrB,SAASC,eAAe,SDyHpB,kBAAmBqB,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.60d3d4fd.chunk.js","sourcesContent":["export var guides = `**This Website uses Remarkable, and this is how to use it!** (**CREDITS TO REMARKABLE, CLICK CREATOR'S PREFACE FOR MORE.**)\r\n\r\n# Remarkable\r\n\r\n> Experience real-time editing with Remarkable!\r\n\r\nClick the \\`clear\\` link to start with a clean slate, or get the \\`permalink\\` to share or save your results.\r\n\r\n***\r\n\r\n# h1 Heading\r\n## h2 Heading\r\n### h3 Heading\r\n#### h4 Heading\r\n##### h5 Heading\r\n###### h6 Heading\r\n\r\n\r\n## Horizontal Rules\r\n\r\n___\r\n\r\n***\r\n\r\n***\r\n\r\n\r\n## Typographic replacements\r\n\r\nEnable typographer option to see result.\r\n\r\n(c) (C) (r) (R) (tm) (TM) (p) (P) +-\r\n\r\ntest.. test... test..... test?..... test!....\r\n\r\n!!!!!! ???? ,,\r\n\r\nRemarkable -- awesome\r\n\r\n\"Smartypants, double quotes\"\r\n\r\n'Smartypants, single quotes'\r\n\r\n\r\n## Emphasis\r\n\r\n**This is bold text**\r\n\r\n__This is bold text__\r\n\r\n*This is italic text*\r\n\r\n_This is italic text_\r\n\r\n~~Deleted text~~\r\n\r\nSuperscript: 19^th^\r\n\r\nSubscript: H~2~O\r\n\r\n++Inserted text++\r\n\r\n==Marked text==\r\n\r\n\r\n## Blockquotes\r\n\r\n> Blockquotes can also be nested...\r\n>> ...by using additional greater-than signs right next to each other...\r\n> > > ...or with spaces between arrows.\r\n\r\n\r\n## Lists\r\n\r\nUnordered\r\n\r\n+ Create a list by starting a line with \\`+\\`, \\`-\\`, or \\`*\\`\r\n+ Sub-lists are made by indenting 2 spaces:\r\n  - Marker character change forces new list start:\r\n    * Ac tristique libero volutpat at\r\n    + Facilisis in pretium nisl aliquet\r\n    - Nulla volutpat aliquam velit\r\n+ Very easy!\r\n\r\nOrdered\r\n\r\n1. Lorem ipsum dolor sit amet\r\n2. Consectetur adipiscing elit\r\n3. Integer molestie lorem at massa\r\n\r\n\r\n1. You can use sequential numbers...\r\n1. ...or keep all the numbers as \\`1.\\`\r\n\r\nStart numbering with offset:\r\n\r\n57. foo\r\n1. bar\r\n\r\n\r\n## Code\r\n\r\nInline \\`code\\`\r\n\r\nIndented code\r\n\r\n    // Some comments\r\n    line 1 of code\r\n    line 2 of code\r\n    line 3 of code\r\n\r\n\r\nBlock code \"fences\"\r\n\r\n\\`\\`\\`\r\nSample text here...\r\n\\`\\`\\`\r\n\r\nSyntax highlighting\r\n\r\n\\`\\`\\` js\r\nvar foo = function (bar) {\r\n  return bar++;\r\n};\r\n\r\nconsole.log(foo(5));\r\n\\`\\`\\`\r\n\r\n## Tables\r\n\r\n| Option | Description |\r\n| ------ | ----------- |\r\n| data   | path to data files to supply the data that will be passed into templates. |\r\n| engine | engine to be used for processing templates. Handlebars is the default. |\r\n| ext    | extension to be used for dest files. |\r\n\r\nRight aligned columns\r\n\r\n| Option | Description |\r\n| ------:| -----------:|\r\n| data   | path to data files to supply the data that will be passed into templates. |\r\n| engine | engine to be used for processing templates. Handlebars is the default. |\r\n| ext    | extension to be used for dest files. |\r\n\r\n\r\n## Links\r\n\r\n[link text](http://dev.nodeca.com)\r\n\r\n[link with title](http://nodeca.github.io/pica/demo/ \"title text!\")\r\n\r\nAutoconverted link https://github.com/nodeca/pica (enable linkify to see)\r\n\r\n\r\n## Images\r\n\r\n![Minion](https://octodex.github.com/images/minion.png)\r\n![Stormtroopocat](https://octodex.github.com/images/stormtroopocat.jpg \"The Stormtroopocat\")\r\n\r\nLike links, Images also have a footnote style syntax\r\n\r\n![Alt text][id]\r\n\r\nWith a reference later in the document defining the URL location:\r\n\r\n[id]: https://octodex.github.com/images/dojocat.jpg  \"The Dojocat\"\r\n\r\n\r\n## Footnotes\r\n\r\nFootnote 1 link[^first].\r\n\r\nFootnote 2 link[^second].\r\n\r\nInline footnote^[Text of inline footnote] definition.\r\n\r\nDuplicated footnote reference[^second].\r\n\r\n[^first]: Footnote **can have markup**\r\n\r\n    and multiple paragraphs.\r\n\r\n[^second]: Footnote text.\r\n\r\n\r\n## Definition lists\r\n\r\nTerm 1\r\n\r\n:   Definition 1\r\nwith lazy continuation.\r\n\r\nTerm 2 with *inline markup*\r\n\r\n:   Definition 2\r\n\r\n        { some code, part of Definition 2 }\r\n\r\n    Third paragraph of definition 2.\r\n\r\n_Compact style:_\r\n\r\nTerm 1\r\n  ~ Definition 1\r\n\r\nTerm 2\r\n  ~ Definition 2a\r\n  ~ Definition 2b\r\n\r\n\r\n## Abbreviations\r\n\r\nThis is HTML abbreviation example.\r\n\r\nIt converts \"HTML\", but keep intact partial entries like \"xxxHTMLyyy\" and so on.\r\n\r\n*[HTML]: Hyper Text Markup Language\r\n\r\n\r\n***\r\n\r\n__Advertisement :)__\r\n\r\n- __[pica](https://nodeca.github.io/pica/demo/)__ - high quality and fast image\r\n  resize in browser.\r\n- __[babelfish](https://github.com/nodeca/babelfish/)__ - developer friendly\r\n  i18n with plurals support and easy syntax.\r\n\r\nYou'll like those projects! :)\r\n`;\r\n\r\nexport var creator = `# Creator's Preface\r\n\r\n**Hey! Thanks for trying this out!**\r\n\r\nAll I can say is this is a __100__ **LIT** [Markdown API](https://github.com/jonschlinkert/remarkable) and\r\n\r\nit is indeed wonderful how something like this exists.\r\n\r\n~~Atleast for me~~\r\n\r\nThis Markdown Previewer is **One** out of **Five** Projects that I have made in the past, and the others would be:\r\n\r\n1. React Hook Calculator [^First]\r\n2. React Hook Pomodoro Clock [^Second]\r\n3. React Hook Drum Pad  [^Third]\r\n4. React Hook Random Quote Machine [^Fourth]\r\n\r\n[^First]: React Hook Calculator github link [here](https://github.com/Darealtube/React-Calculator)\r\n[^Second]: React Hook Pomodoro Clock github link [here](https://github.com/Darealtube/react-pomodoro)\r\n[^Third]: React Hook Drum Pad github link [here](https://github.com/Darealtube/React-drumpad)\r\n[^Fourth]: React Hook Random Quote Machine github link [here](https://github.com/Darealtube/react-QuoteMachine)\r\n\r\nI learned React with the help of **[Freecodecamp](https://www.freecodecamp.org/)**, and I am very thankful.\r\n\r\nYou may notice that all of them have ==Hook== in them, that's because I really don't like using Class Components\r\nanymore. Plus, I just love ==Functional Programming== and React Hooks make use of Functional Components, so it is just\r\n\r\n_**WONDERFUL**_.\r\n\r\nAt the time of Writing, this is the last project out of the Five, and I will make my ==Personal Portfolio== page next, which I\r\nwill publicly release as a website, along with the other websites that I made.\r\n\r\nAnd when I finish, I will have to learn the back end side.\r\n\r\n\r\nProgramming really taught me alot of things about life, including **Not giving up in the face of trouble**, and I have acquired\r\na mindset that I can get anything, it's just that it's still on the way, and ==nothing== really lasts forever, including the sufferings\r\nI am having.\r\n\r\nThere are a lot more, you could say I am overly dramatic but it is what it is. **This is why I love Programming** of course alongside\r\nmany other reasons.\r\n\r\n\r\nThat's it really. Thanks for reading this!\r\n\r\n\r\n\\`\\`\\`\r\n\r\nconsole.log('Have a great day!')\r\n\r\n\\`\\`\\`\r\n\r\nBest Regards,\r\n\r\n>Darryl B. Javier`\r\n","import React, {useState} from 'react';\nimport './App.css';\nimport { Remarkable } from 'remarkable';\nimport { linkify } from 'remarkable/linkify';\nimport { guides, creator } from './guides/guides.js';\n\nfunction App() {\n  const [fontsize,setfontsize] = useState(\"20px\");\n  const [fontstyle, setfontstyle] = useState(\"Arial\")\n\n  var md = new Remarkable('full', {\n    html: true,\n    typographer: true\n  }).use(linkify);\n\n  function mark(e){\n    document.getElementById(\"preview\").innerHTML = md.render(e.target.value);\n  }\n\n  function sizeChange(e){\n    setfontsize(e.target.value);\n    document.getElementById('preview').style.fontSize = e.target.value;\n  }\n\n  function fontChange(e){\n    setfontstyle(e.target.value);\n    document.getElementById('preview').style.fontFamily = e.target.value;\n  }\n\n  function markguide(){\n    document.getElementById('text').value = guides;\n    document.getElementById('preview').innerHTML = md.render(guides);\n  }\n\n  function creators(){\n    document.getElementById('text').value = creator;\n    document.getElementById('preview').innerHTML = md.render(creator);\n  }\n\n  function clear(){\n    document.getElementById('text').value = \"\";\n    document.getElementById('preview').innerHTML = \"\";\n  }\n\n  return (\n    <div>\n    <div className=\"markdown\">\n\n    <div id=\"dropdown\" class=\"dropdown\">\n    <button class=\"dropbtn\">Font Size: {fontsize}</button>\n    <div id=\"dropdown-content\" class=\"dropdown-content\">\n    <button onClick={sizeChange} value=\"14px\">14px</button>\n    <button onClick={sizeChange} value=\"16px\">16px</button>\n    <button onClick={sizeChange} value=\"18px\">18px</button>\n    <button onClick={sizeChange} value=\"20px\">20px</button>\n    <button onClick={sizeChange} value=\"22px\">22px</button>\n    <button onClick={sizeChange} value=\"24px\">24px</button>\n    <button onClick={sizeChange} value=\"28px\">28px</button>\n    <button onClick={sizeChange} value=\"32px\">32px</button>\n    <button onClick={sizeChange} value=\"45px\">45px</button>\n    <button onClick={sizeChange} value=\"56px\">56px</button>\n    </div>\n    </div>\n\n    <div id=\"dropdown\" class=\"dropdown2\">\n    <button class=\"dropbtn2\">Font Style: {fontstyle}</button>\n    <div id=\"dropdown-content\" class=\"dropdown-content2\">\n    <button onClick={fontChange} value=\"Arial, Helvetica, sans-serif\">Arial</button>\n    <button onClick={fontChange} value=\"Verdana, Helvetica, sans-serif\">Verdana</button>\n    <button onClick={fontChange} value=\"Georgia, Helvetica, sans-serif\">Georgia</button>\n    <button onClick={fontChange} value=\"'Times New Roman', Times, serif\">Times New Roman</button>\n    <button onClick={fontChange} value=\"'Courier New', Courier, monospace\">Courier New</button>\n    <button onClick={fontChange} value=\"'Lucida Console', Courier, monospace\">Lucida Console</button>\n    </div>\n    </div>\n\n      <div id=\"editor\">\n      <h1 style={{textAlign: \"center\"}}>Markdown Editor</h1>\n      <form>\n      <textarea id=\"text\" onChange={mark}></textarea>\n      <button type=\"button\" onClick={markguide}>Markdown Guide</button>\n      <button type=\"button\" onClick={creators}>Creator's Preface</button>\n      <button type=\"button\" onClick={clear}>Clear</button>\n      </form>\n      </div>\n\n\n      <div id=\"display\">\n      <h1 style={{textAlign: \"center\"}}>Markdown Preview</h1>\n      <div id=\"preview\">\n      </div>\n      </div>\n\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}